generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id          Int    @id @default(autoincrement())
  telegramId  String @unique
  authDate    DateTime
  authPayload String
  username    String?
  firstName   String?
  score       Float
  jwtToken    String?  // Поле для хранения токена подтверждения
  isVerified  Boolean  @default(false) // Поле для отслеживания подтверждения email
  role        String   @default("user")
  referrals   Referral[] @relation("Referrer") // Referrals made by this user
  referredBy  Referral[] @relation("Referred") // Referrals where this user was referred
  createdAt   DateTime @default(now())
}

model Referral {
  id             Int    @id @default(autoincrement())
  referrerId     Int
  referredId     Int
  // Define relationships
  referrer    User @relation("Referrer", fields: [referrerId], references: [id])
  referred    User @relation("Referred", fields: [referredId], references: [id])
  createdAt   DateTime @default(now())
}

model UserProgress {
  id                 Int      @id @default(autoincrement())
  telegramId         String   @unique
  lastInteraction    DateTime
  currentStreak      Int      @default(0) // Текущая длина цепочки дней
  completedStreaks   Int      @default(0) // Количество завершенных 30-дневных циклов
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}
